{"level":"error","message":"Error: SyntaxError: Unexpected token } in JSON at position 43"}
{"level":"error","message":"Error: ReferenceError: jwtCookie is not defined"}
{"level":"error","message":"Error: ReferenceError: jwtCookie is not defined"}
{"level":"error","message":"Error: ReferenceError: jwtCookie is not defined"}
{"level":"error","message":"Error: TypeError: cartsService.updateCartProducts is not a function"}
{"level":"error","message":"Error: MongoServerError: E11000 duplicate key error collection: DBPerezBruno.tickets index: code_1 dup key: { code: \"d3fa3c9a57005919c09eea38afc57dc6d4d92bd3\" }"}
{"level":"error","message":"Error: MongoServerError: E11000 duplicate key error collection: DBPerezBruno.tickets index: code_1 dup key: { code: \"d3fa3c9a57005919c09eea38afc57dc6d4d92bd3\" }"}
{"level":"error","message":"Error: MongoServerError: E11000 duplicate key error collection: DBPerezBruno.tickets index: code_1 dup key: { code: \"d3fa3c9a57005919c09eea38afc57dc6d4d92bd3\" }"}
{"level":"error","message":"Error: MongoServerError: E11000 duplicate key error collection: DBPerezBruno.tickets index: code_1 dup key: { code: \"d3fa3c9a57005919c09eea38afc57dc6d4d92bd3\" }"}
{"level":"error"}
{"level":"error"}
{"level":"error","message":"Error: ReferenceError: ProductsRepository is not defined"}
{"level":"error","message":"Error: ValidationError: password: Path `password` is required., email: Path `email` is required., last_name: Path `last_name` is required., first_name: Path `first_name` is required."}
{"level":"error","message":"Error: ReferenceError: result is not defined"}
{"level":"error","message":"Error: Error: data and hash arguments required"}
{"level":"error","message":"Error: Error: data and hash arguments required"}
{"level":"error","message":"Error: ReferenceError: _id is not defined"}
{"level":"error","message":"Error: MongoServerError: E11000 duplicate key error collection: DBPerezBruno.products index: code_1 dup key: { code: \"1234\" }"}
{"level":"error","message":"Error: TypeError: Cannot destructure property 'user' of '(intermediate value)' as it is undefined."}
{"level":"error","message":"Error: ReferenceError: ProductsRepository is not defined"}
{"level":"error","message":"Error: ReferenceError: result is not defined"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"secret or public key must be provided","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"Error: StrictPopulateError: Cannot populate path `products.product` because it is not in your schema. Set the `strictPopulate` option to false to override."}
{"level":"error","message":"Error: StrictPopulateError: Cannot populate path `products.product` because it is not in your schema. Set the `strictPopulate` option to false to override."}
{"level":"error"}
{"level":"error"}
{"level":"error"}
{"level":"error"}
{"level":"error","message":"Error: MongoServerError: E11000 duplicate key error collection: DBPerezBruno.products index: code_1 dup key: { code: \"1234\" }"}
{"level":"error","message":"invalid token","name":"JsonWebTokenError"}
{"expiredAt":"2024-03-21T00:58:03.000Z","level":"error","message":"jwt expired","name":"TokenExpiredError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"Error: ValidationError: products.0.quantity: La cantidad del producto es requerida"}
{"level":"error","message":"Error: ValidationError: products.0.quantity: La cantidad del producto es requerida"}
{"level":"error","message":"Error: TypeError: Cannot read properties of undefined (reading 'user')"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"invalid signature","name":"JsonWebTokenError"}
{"level":"error","message":"Error: MongoServerError: E11000 duplicate key error collection: DBPerezBruno.products index: code_1 dup key: { code: \"1234\" }"}
{"level":"error","message":"Error: TypeError: Cannot destructure property 'user' of '(intermediate value)' as it is undefined."}
{"level":"error","message":"Error: TypeError: userModel.findOne(...).lean(...).exec(...).populate is not a function"}
